<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Server | Posts on Fourleaf Blog</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/</link><description>Recent content in Server | Posts on Fourleaf Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 10 Feb 2023 15:06:45 +0800</lastBuildDate><atom:link href="https://zhujianghan.github.io/zjh-blog/posts/server/index.xml" rel="self" type="application/rss+xml"/><item><title>Nginx__config Proxy_pass</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/nginx_config-proxy_pass/</link><pubDate>Fri, 10 Feb 2023 15:06:45 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/nginx_config-proxy_pass/</guid><description>参考简书: nginx 之 proxy_pass 详解
nginx conf 之 proxy_pass 使用背景 vue3 项目调用后台接口时, 不希望将后端接口地址(host地址) 暴露给普通用户, 并且直接解决浏览器跨域问题, 会使用 nginx 对接口地址作代码, 表面上访问前端 vue 项目的接口地址, 实际上会通过代码转发到真正的后端服务地址
vue3+vite 开发环境在 vite.config.js 配置代理 // vite.config.js export defaut defineConfig({ ... server: { proxy: { &amp;#39;/api&amp;#39;: { target: &amp;#39;http://backend.test/api&amp;#39;, changeOrigin: true, rewrite: (path) =&amp;gt; path.replace(/^\/api/, &amp;#39;&amp;#39;) } } } ... }) nginx conf 生产环境 按要代理的地址最后是否带 &amp;lsquo;/&amp;rsquo;,及是否有 子目录分为 2 种情况, 每种情况按是否有子目录又可再细分为 2 种情况
有 &amp;lsquo;/&amp;rsquo; 表示绝对路径, 不带 location;
没有表示相对路径, 要带上 location 后的路径</description></item><item><title>Apache_bench_in_go__hey</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/apache_bench_in_go__hey/</link><pubDate>Wed, 01 Feb 2023 10:04:05 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/apache_bench_in_go__hey/</guid><description>使用 hey 代替 ab 对网站应用做性能测试 (服务器配置) https://github.com/rakyll/hey
hey is a tiny program that sends some load to a web application.
二八定律: 80% 的请求(访问)集中在 20% 的时间内
假设一个网站每日 pv (page visit) 300w,
也就是 300w*80% &amp;lt;=&amp;gt; 3600*24*20%, 240w pv 在 17280s 内, 240*10000/17280 = 138 QPS (query per second)
如果单台机器支持的 QPS 在 50, 那么需要 3 台这样的机器才能满足需求
## hey 执行结果示例 $ hey http://localhost:8080/api/tmp Summary: Total: 0.1239 secs Slowest: 0.0961 secs Fastest: 0.0006 secs Average: 0.</description></item><item><title>Docker Build Development Environment of Tarojs</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/docker-build-development-environment-of-tarojs/</link><pubDate>Fri, 28 Oct 2022 14:43:36 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/docker-build-development-environment-of-tarojs/</guid><description>// 目录结构 |-- project folder | |-- xxx | |-- yyy | |-- zzz | |-- ... | |-- docker-files | | Dockerfile | | docker-compose.yml // Dockerfile # syntax=docker/dockerfile:1 FROM node:16-alpine RUN \ npm config set registry http://registry.npmmirror.com \ &amp;amp;&amp;amp; npm install -g @tarojs/cli RUN mkdir -p /var/www WORKDIR /var/www // docker-compose.yml version: &amp;#39;3.7&amp;#39; networks: frontend: driver: bridge services: ### Taro ############################################## taro: container_name: taro restart: always build: context: .</description></item><item><title>vmware-共享文件夹设置</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/vmware-share-folder/</link><pubDate>Thu, 27 Oct 2022 10:01:10 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/vmware-share-folder/</guid><description>虚拟机关机状态下, vmware中 设置-选项-共享文件夹 添加要共享的文件夹 虚拟机开机, vmware中 虚拟机-安装VMware-Tools 虚拟机中安装 open-vm-tools-desktop (has gui) 或 open-vm-tools (no gui) 虚拟机中执行 /usr/bin/vmhgfs-fuse .host:/ /home/user1/shares -o subtype=vmhgfs-fuse,allow_other 挂载共享文件夹, ubuntu 提示 allow_user 需要其它设置, 则删除 &amp;lsquo;,allow_other&amp;rsquo; 即可 open-vm-tools 安装参考官方文档
文件夹挂载 参考文档
参考csdn: vmware 挂载共享文件夹</description></item><item><title>Linux Crontab Pwd</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/linux-crontab-pwd/</link><pubDate>Fri, 26 Aug 2022 10:08:16 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/linux-crontab-pwd/</guid><description>背景: 使用 crontab -e 添加定时任务后, 发现任务没有如希望的执行, 发现要执行的命令是使用了相对路径引入文件, 推测是文件路径不正常
在 linux 中 root 用户执行命令 crotab -e 添加任务获取当前工作目录
* * * * * pwd &amp;gt;&amp;gt; ~/tmp.txt 2&amp;gt;&amp;amp;1 之后生成一新用户
# root 用户 # -m 生成用户同名 home 目录 useradd -m test passwd test # test 用户 同样新增获取 pwd 输出到其 home 目录的任务 crontab -e 经过执行发现,
在 /root/tmp.txt 文件中 pwd 输出为 /root
在 /home/test/tmp.txt 文件中 pwd 输出为 /home/test
&amp;ldquo;The cron daemon starts a subshell from your HOME directory&amp;rdquo; 参考文档</description></item><item><title>查看本机-ip</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/%E6%9F%A5%E7%9C%8B%E6%9C%AC%E6%9C%BA-ip/</link><pubDate>Sun, 24 Apr 2022 12:59:47 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/%E6%9F%A5%E7%9C%8B%E6%9C%AC%E6%9C%BA-ip/</guid><description> hostname -I ip addr ifconfig, // 需要已安装 net-tools</description></item><item><title>acme-sh-自动申请-ssl-证书</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/acme-sh-%E8%87%AA%E5%8A%A8%E7%94%B3%E8%AF%B7-ssl-%E8%AF%81%E4%B9%A6/</link><pubDate>Sat, 16 Apr 2022 11:29:14 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/acme-sh-%E8%87%AA%E5%8A%A8%E7%94%B3%E8%AF%B7-ssl-%E8%AF%81%E4%B9%A6/</guid><description>/root/.acme.sh/acme.sh --install-cert --nginx /usr/local/nginx/conf/vhost/my.domain.conf -d my.domain.com \ --key-file /usr/local/nginx/ssl/my.domain.com/key.pem \ --fullchain-file /usr/local/nginx/ssl/my.domain.com/cert.pem \ --reloadcmd &amp;#34;supervisorctl restart nginx&amp;#34; 上面的 &amp;ndash;nginx 指定配置文件路径 参考: https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E
1. 生成证书, 检测域名所有权 acme.sh --issue -d www.aaa.com --webroot /www/wwwroot/www.aaa.com #或 acme.sh --issue -d www.aaa.com --nginx /usr/local/nginx/conf/sites-enabled/www.aaa.com.conf # 注意: 在 issue 阶段不要在 conf 中设置 listen 443 及 ssl 相关配置, 否则在没有正确的 cert&amp;amp;key 文件时会有报错 # 应在 issue 执行后, 再在 conf 文件中添加 ssl 相关配置 2. 配置 nginx 文件路径 ssl_certificate /usr/local/nginx/ssl/www.aaa.com/cert.pem; ssl_certificate_key /usr/local/nginx/ssl/www.aaa.com/key.pem; 3.</description></item><item><title>apache_通常每个套接字只允许使用一次_错误</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/apache_%E9%80%9A%E5%B8%B8%E6%AF%8F%E4%B8%AA%E5%A5%97%E6%8E%A5%E5%AD%97%E5%8F%AA%E5%85%81%E8%AE%B8%E4%BD%BF%E7%94%A8%E4%B8%80%E6%AC%A1_%E9%94%99%E8%AF%AF/</link><pubDate>Sat, 16 Apr 2022 11:29:14 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/apache_%E9%80%9A%E5%B8%B8%E6%AF%8F%E4%B8%AA%E5%A5%97%E6%8E%A5%E5%AD%97%E5%8F%AA%E5%85%81%E8%AE%B8%E4%BD%BF%E7%94%A8%E4%B8%80%E6%AC%A1_%E9%94%99%E8%AF%AF/</guid><description>安装了apache2.4.27, 在cmd中启动apache服务( httpd.exe -k start )的时候却提示：通常每个套接字只允许使用一次.
原因可能是系统默认 httpd.exe 服务自动开启, 可以先关闭该服务( httpd.exe -k stop ), 再重新开启; 然后在 计算机-( 右键 ) -管理-服务 中关闭apache服务的自动启动</description></item><item><title>apache添加php模块时cannot-load--dll出错</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/apache%E6%B7%BB%E5%8A%A0php%E6%A8%A1%E5%9D%97%E6%97%B6cannot-load--dll%E5%87%BA%E9%94%99/</link><pubDate>Sat, 16 Apr 2022 11:29:14 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/apache%E6%B7%BB%E5%8A%A0php%E6%A8%A1%E5%9D%97%E6%97%B6cannot-load--dll%E5%87%BA%E9%94%99/</guid><description>C:\Users\Administrator&amp;gt;httpd.exe -k start httpd.exe: Syntax error on line 185 of C:/tnwamp/Apache24/conf/httpd.conf: Canno t load C:/tnwamp/php5.6.31/php5apache2_4.dll into server: \xd5\xd2\xb2\xbb\xb5\x bd\xd6\xb8\xb6\xa8\xb5\xc4\xc4\xa3\xbf\xe9\xa1\xa3
原因可能是缺失 mvcr100.dll, 可以通过双击打开 php.exe文件查看是否如此, 如果提示缺失 mvcr100.dll, 那么上 https://www.microsoft.com/zh-cn/download/confirmation.aspx?id=30679 下载一个 vcredist_x86.exe 即可( 这是是32位的 )</description></item><item><title>linux-ssh-端口更改-及-ip-限制-&amp;-rsa-登录</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/linux-ssh-%E7%AB%AF%E5%8F%A3%E6%9B%B4%E6%94%B9-%E5%8F%8A-ip-%E9%99%90%E5%88%B6--rsa-%E7%99%BB%E5%BD%95/</link><pubDate>Sat, 16 Apr 2022 11:29:14 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/linux-ssh-%E7%AB%AF%E5%8F%A3%E6%9B%B4%E6%94%B9-%E5%8F%8A-ip-%E9%99%90%E5%88%B6--rsa-%E7%99%BB%E5%BD%95/</guid><description>原文见 cnblog: 修改linux的ssh默认端口号22的方法 rsa 参考
一、修改配置文件 vi /etc/ssh/sshd_config
找到#Port 22
修改为自己要使用的端口号：Port 26000
然后 :x 退出保存
二、重启ssh服务 /etc/init.d./sshd restart 如果还要设置防火墙，配置：vi /etc/sysconfig/iptables
启用26000端口：/etc/init.d/iptables restart
三、如果要显示固定IP才能登陆： 1.修改 /etc/hosts.deny, 加入一行sshd:ALL &amp;ndash;#意思是任何ip都不能登陆
2.然后修改：/etc/hosts.allow,在其中进行如下设置:sshd:192.168.0.241:allow &amp;ndash;#意思是只允许192.168.0.241登陆
四、rsa 密钥对登录 client 执行以下命令生成密钥对 (~/.ssh) ssh-keygen -t rsa 把 is_rsa.pub 复制到服务器的 ~/.ssh/authorized_keys 文件后面 配置 /etc/ssh/sshd_config RSAAuthentication yes PubkeyAuthentication yes AuthorizedKeysFile .ssh/authorized_keys service sshd restart</description></item><item><title>ubuntu-没有root默认密码--</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/ubuntu-%E6%B2%A1%E6%9C%89root%E9%BB%98%E8%AE%A4%E5%AF%86%E7%A0%81--/</link><pubDate>Sat, 16 Apr 2022 11:29:14 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/ubuntu-%E6%B2%A1%E6%9C%89root%E9%BB%98%E8%AE%A4%E5%AF%86%E7%A0%81--/</guid><description>环境: vmware简易安装 ubuntu 版本 18.04 安装完成后 root 用户没有密码, 但是中途让添加过一个用户, 这个用户即有 sudo 权限
# 使用 `sudo passwd` 设置 root 的密码 # 使用 `su` 切换到 root 用户 How to Find/Change Ubuntu Default Root Password</description></item><item><title>virtualbox-centos7-7-nat-网络连接-并使用-ssh-连接</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/virtualbox-centos7-7-nat-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5-%E5%B9%B6%E4%BD%BF%E7%94%A8-ssh-%E8%BF%9E%E6%8E%A5/</link><pubDate>Sat, 16 Apr 2022 11:29:14 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/virtualbox-centos7-7-nat-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5-%E5%B9%B6%E4%BD%BF%E7%94%A8-ssh-%E8%BF%9E%E6%8E%A5/</guid><description>virtual 添加 nat 网络 虚拟机配置 nat 网络 centos 系统文件修改
cd /etc/sysconfig/network-scripts/ // 查找 ifcfg-enp... 文件并修改其中的 onboot 为 yes vi ifcfg-en0s3 // 修改后, 重启 network 服务, 并用 ping 或 curl 进行测试 service network restart ping www.baidu.com 虚拟机设置 xshell 连接 ssh -p root@127.0.0.1 2222
或
文件-新建-连接&amp;hellip;.</description></item><item><title>linux-三命令(三剑客)之-sed</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/linux-%E4%B8%89%E5%91%BD%E4%BB%A4%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8B-sed/</link><pubDate>Wed, 06 Apr 2022 17:48:29 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/linux-%E4%B8%89%E5%91%BD%E4%BB%A4%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8B-sed/</guid><description>使用 sed 对文件进行文本替换 (windows 下也可用)
// 输出替换后的文本 sed &amp;#39;s/foo/bar/g&amp;#39; input.txt // 在原文件上进行修改 -i sed -i &amp;#39;s/foo/bar/g&amp;#39; input.txt // 要替换的文本中包含特殊字符 如 &amp;#39;/ &amp;#39;, 则使用 +/_或其它字符 作为分隔符 sed &amp;#39;s+http://+https://+g&amp;#39; input.txt 参考自: www.cyberciti.biz</description></item><item><title>Linux-下-AX210NGW-无线网卡安装驱动</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/linux-%E4%B8%8B-ax210ngw-%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E5%AE%89%E8%A3%85%E9%A9%B1%E5%8A%A8/</link><pubDate>Thu, 10 Feb 2022 13:36:53 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/linux-%E4%B8%8B-ax210ngw-%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E5%AE%89%E8%A3%85%E9%A9%B1%E5%8A%A8/</guid><description>参考: Linux* Support for Intel® Wireless Adapters
参考: https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi 参考: https://www.intel.com/content/www/us/en/support/articles/000005511/wireless.html</description></item><item><title>使用-echo-写入文件</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/%E4%BD%BF%E7%94%A8-echo-%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6/</link><pubDate>Thu, 22 Apr 2021 09:30:04 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/%E4%BD%BF%E7%94%A8-echo-%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6/</guid><description>docker 容器内很可能没有 vi 等编辑工具, 可使用 echo 或 cat 进行写入
# 覆盖写入, 文件不存在则新建后写入 echo &amp;#34;abc&amp;#34; &amp;gt; file.txt # 尾行追加写入, 文件不存在则新建后写入 echo &amp;#34;def&amp;#34; &amp;gt;&amp;gt; file.txt echo $(date) &amp;gt;&amp;gt; file.txt # 覆盖写入 cat &amp;lt;&amp;lt; EOF &amp;gt; m.txt &amp;gt; d &amp;gt; e &amp;gt; f &amp;gt; EOF # 追加写入 cat &amp;lt;&amp;lt;EOF &amp;gt;&amp;gt; m.txt &amp;gt; d &amp;gt; e &amp;gt; f &amp;gt; EOF</description></item><item><title>vmware-linux-网络配置</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/vmware-linux-%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</link><pubDate>Thu, 11 Mar 2021 09:49:10 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/vmware-linux-%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</guid><description>centos7.9
vmware 中设置 虚拟机网络连接为 桥接模式
虚拟机(centos) 中 设置 /etc/sysconfig/network-scripts/ifcfg-ens33 中 ONBOOT 为
[root@bogon ~]# cat /etc/sysconfig/network-scripts/ifcfg-ens33 TYPE=Ethernet PROXY_METHOD=none BROWSER_ONLY=no BOOTPROTO=dhcp DEFROUTE=yes IPV4_FAILURE_FATAL=no IPV6INIT=yes IPV6_AUTOCONF=yes IPV6_DEFROUTE=yes IPV6_FAILURE_FATAL=no IPV6_ADDR_GEN_MODE=stable-privacy NAME=ens33 UUID=7e16f33b-714d-4386-ab0c-58b6ddbc7aa3 DEVICE=ens33 #ONBOOT=no ONBOOT=yes</description></item><item><title>linux-更新-curl-版本</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/linux-%E6%9B%B4%E6%96%B0-curl-%E7%89%88%E6%9C%AC/</link><pubDate>Tue, 09 Mar 2021 15:59:07 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/linux-%E6%9B%B4%E6%96%B0-curl-%E7%89%88%E6%9C%AC/</guid><description>转自: How to yum update curl 7.29 to 7.61 - CentOS 7.X
# rpm -Uvh http://www.city-fan.org/ftp/contrib/yum-repo/city-fan.org-release-2-1.rhel7.noarch.rpm # cat /etc/yum.repos.d/city-fan.org.repo # 这里要保证 enabled = 1 [city-fan.org] name=city-fan.org repository for Red Hat Enterprise Linux (and clones) $releasever ($basearch) #baseurl=http://mirror.city-fan.org/ftp/contrib/yum-repo/rhel$releasever/$basearch mirrorlist=http://mirror.city-fan.org/ftp/contrib/yum-repo/mirrorlist-rhel$releasever enabled=1 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-city-fan.org ... # yum info curl # yum update curl 版本回退
# mkdir ~/temp &amp;amp;&amp;amp; cd ~/temp # wget http://mirror.centos.org/centos/7.5.1804/os/x86_64/Packages/curl-7.29.0-46.el7.x86_64.rpm # wget http://mirror.centos.org/centos/7.5.1804/os/x86_64/Packages/libcurl-7.29.0-46.el7.x86_64.rpm # wget http://mirror.centos.org/centos/7.5.1804/os/x86_64/Packages/libcurl-devel-7.29.0-46.el7.x86_64.rpm # rpm -Uvh --oldpackage *.</description></item><item><title>ubuntu-apt-换源</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/ubuntu-apt-%E6%8D%A2%E6%BA%90/</link><pubDate>Wed, 11 Nov 2020 13:50:46 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/ubuntu-apt-%E6%8D%A2%E6%BA%90/</guid><description>// 1. /etc/apt/sources.list 文件备份 cp -a /etc/apt/sources.list /etc/apt/sources.list.bak // 2. 修改 sources.list 文件 sudo vim sources.list tips:
阿里源文件: 出现 /etc/apt/sources.list&amp;quot; E212: Can&amp;rsquo;t open file for writing 解决方案 , 可能是因为用户权限不足, 使用 root 或 sudo vim 试试 参考自: /etc/apt/sources.list&amp;quot; E212: Can&amp;rsquo;t open file for writing</description></item><item><title>linux-生成带日期的文件</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/linux-%E7%94%9F%E6%88%90%E5%B8%A6%E6%97%A5%E6%9C%9F%E7%9A%84%E6%96%87%E4%BB%B6/</link><pubDate>Wed, 11 Nov 2020 11:08:21 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/linux-%E7%94%9F%E6%88%90%E5%B8%A6%E6%97%A5%E6%9C%9F%E7%9A%84%E6%96%87%E4%BB%B6/</guid><description>// date 命令用于输出时间, 反引号用于变量输出 touch `data +%F`.txt.log</description></item><item><title>redhat7-systemd-和-systemctl</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/redhat7-systemd-%E5%92%8C-systemctl/</link><pubDate>Mon, 09 Nov 2020 09:45:17 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/redhat7-systemd-%E5%92%8C-systemctl/</guid><description>systemd 是系统管理守护进程, 其中的 d 表示 daemon systemctl 是命令, 其中的 ctl 表示 control 以下的 xxx 表示服务名称
systemctl start xxx =&amp;gt; 启动服务 systemctl restart xxx =&amp;gt; 重新启动服务 systemctl stop xxx =&amp;gt; 停止服务 systemctl enable xxx =&amp;gt; 加入到启动项 systemctl status xxx =&amp;gt; 查看状态 shell api: application interface 应用程序接口
硬件 &amp;lt;= 内核 &amp;lt;= api &amp;lt;= 应用程序
shell 是一种应用程序, 壳, 终端(解释器),
bash 是 shell 的一种
linux 命令 格式: 命令 参数 对象 ls -a / 参数和对象有时可不需要</description></item><item><title>nginx-autoindex-off</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/nginx-autoindex-off/</link><pubDate>Thu, 07 Nov 2019 12:52:31 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/nginx-autoindex-off/</guid><description>nginx autoindex off 禁止目录访问</description></item><item><title>windows-中使用命令来登录远程-linux</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/windows-%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E6%9D%A5%E7%99%BB%E5%BD%95%E8%BF%9C%E7%A8%8B-linux/</link><pubDate>Wed, 16 Oct 2019 15:34:38 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/windows-%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E6%9D%A5%E7%99%BB%E5%BD%95%E8%BF%9C%E7%A8%8B-linux/</guid><description>如果不使用 xshell 类软件, 可以使用 powershell 或 gitbash 等
// 本地虚拟机做了端口转发后 ssh -p 2222 root@127.0.0.1</description></item><item><title>apache-Multiviews-漏洞</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/apache--multiviews--%E6%BC%8F%E6%B4%9E/</link><pubDate>Fri, 11 Oct 2019 17:08:18 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/apache--multiviews--%E6%BC%8F%E6%B4%9E/</guid><description>腾讯云安全检测提示 xxx.com/icons/index 及 xxx.com/icons/small/index 存在安全漏洞
打开发现是一串 icons 图片, 而在项目文件里并没有这些文件 见: http://www.apache.org/icons/small/
以下引用自: http://www.511yj.com/apache-colose-icons.html
我们如果使用了apache服务器，当我访问http://xxx.xxx.xxx/icons/时会自动显示这个目录下的所以文件列表，这行造成网站目录信息的泄露对我们的网站安全造成威胁，在 关闭apache自动目录列表功能的三种方法 这篇文章中的三种方法都不能禁止自动目录列表，你如果使用网站安全监测，会提醒你发现目录启用了自动目录列表功能，所以我们必须禁止它，经过测试，按如下步骤可以禁止：
打开目录apache/conf/extra/下的文件httpd-autoindex.conf 找到
Alias /icons/ &amp;#34;/xampp/apache/icons/&amp;#34; &amp;lt;Directory &amp;#34;/xampp/apache/icons&amp;#34;&amp;gt; Options Indexes MultiViews AllowOverride None Require all granted &amp;lt;/Directory&amp;gt; &amp;lt;Directory &amp;#34;/xampp/apache/icons&amp;#34;&amp;gt; Options MultiViews AllowOverride None Require all granted &amp;lt;/Directory&amp;gt; 我实际上是注释掉了这些配置, 因为用不到这些 icons, 直接达到目的</description></item><item><title>Linux-查看iptables状态-重启</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/linux-%E6%9F%A5%E7%9C%8Biptables%E7%8A%B6%E6%80%81-%E9%87%8D%E5%90%AF/</link><pubDate>Wed, 09 Oct 2019 10:27:46 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/linux-%E6%9F%A5%E7%9C%8Biptables%E7%8A%B6%E6%80%81-%E9%87%8D%E5%90%AF/</guid><description>iptables 所在目录 ：/etc/sysconfig/iptables service iptables status # 查看iptables状态 service iptables restart # iptables服务重启 service iptables stop # iptables服务禁用 原文链接 csdn</description></item><item><title>本机项目放到局域网中使用</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/%E6%9C%AC%E6%9C%BA%E9%A1%B9%E7%9B%AE%E6%94%BE%E5%88%B0%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%AD%E4%BD%BF%E7%94%A8/</link><pubDate>Tue, 13 Aug 2019 15:14:16 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/%E6%9C%AC%E6%9C%BA%E9%A1%B9%E7%9B%AE%E6%94%BE%E5%88%B0%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%AD%E4%BD%BF%E7%94%A8/</guid><description>第一部分 php环境 环境: laragon 里的 nginx
0 . win10 下自定义本机在局域网内的 ip 地址 网络状态 &amp;ndash; 更改连接属性 &amp;ndash; ip 设置 &amp;ndash; 编辑 首先更改 nginx 里的配置文件, 00-default.conf localhost 加上本机在局域网内的 ip 这样之后重启 nginx, 即在局域网内 ( 电脑或手机均可 ) 访问 192.168.1.18 了, 但是依然不够, 如果有多个虚拟域名希望可以供局域网访问, 那么需要进行第 2 步.
前提: 只能在局域网内的电脑上操作, 手机上不行, 用于接口开发使用也就够了 在另一台电脑上修改 host 文件, 增加一条 域名-ip 映射 关系 192.168.1.18 xxx.test 第二部分 vue 环境 0 . 同第一部分
在 config/index.js 中修改 host 的值为 &amp;lsquo;0.0.0.0&amp;rsquo; // host: &amp;#39;localhost&amp;#39;, // can be overwritten by process.</description></item><item><title>apache-一个站点配置多个域名</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/apache-%E4%B8%80%E4%B8%AA%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AA%E5%9F%9F%E5%90%8D/</link><pubDate>Mon, 10 Jun 2019 15:35:27 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/apache-%E4%B8%80%E4%B8%AA%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AA%E5%9F%9F%E5%90%8D/</guid><description>在 ServerAlias 中配置, 而不是在 ServerName 中配置
&amp;lt;VirtualHost *:80&amp;gt; ServerName 4a89w9.natappfree.cc ServerAlias 4a89w9.natappfree.cc www.appapi.test DocumentRoot &amp;#34;${INSTALL_DIR}/www/u/public&amp;#34; &amp;lt;Directory &amp;#34;${INSTALL_DIR}/www/u/public&amp;#34;&amp;gt; AllowOverride All Require all granted &amp;lt;/Directory&amp;gt; &amp;lt;/VirtualHost&amp;gt;</description></item><item><title>rm-和-chmod,-删除和更新权限</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/rm-%E5%92%8C-chmod-%E5%88%A0%E9%99%A4%E5%92%8C%E6%9B%B4%E6%96%B0%E6%9D%83%E9%99%90/</link><pubDate>Thu, 06 Dec 2018 11:31:01 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/rm-%E5%92%8C-chmod-%E5%88%A0%E9%99%A4%E5%92%8C%E6%9B%B4%E6%96%B0%E6%9D%83%E9%99%90/</guid><description> rm -r -f xxx // 强制删除文件夹及其中的全部文件或文件夹 chmod -R 777 xxx // 给xxx文件夹及其中的全部文件或文件夹设置 777 权限</description></item><item><title>上网证书错误</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/%E4%B8%8A%E7%BD%91%E8%AF%81%E4%B9%A6%E9%94%99%E8%AF%AF/</link><pubDate>Mon, 28 Aug 2017 09:13:19 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/%E4%B8%8A%E7%BD%91%E8%AF%81%E4%B9%A6%E9%94%99%E8%AF%AF/</guid><description>新装了一个intellij idea，因为想搞个长期试用，就把系统时间设置到2050年去了。后来再用cdn的boostrap就不能显示css了，原因是证书过期无效，一看系统时间没改过来，改回就没问题了。</description></item></channel></rss>