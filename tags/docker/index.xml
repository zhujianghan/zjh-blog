<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on Fourleaf Blog</title><link>https://zhujianghan.github.io/zjh-blog/tags/docker/</link><description>Recent content in docker on Fourleaf Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 10 Feb 2025 16:07:00 +0800</lastBuildDate><atom:link href="https://zhujianghan.github.io/zjh-blog/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>docker compose 部署 nextjs &amp; mysql</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/docker-compose%E9%83%A8%E7%BD%B2nextjsmysql%E6%9C%8D%E5%8A%A1/</link><pubDate>Mon, 10 Feb 2025 16:07:00 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/docker-compose%E9%83%A8%E7%BD%B2nextjsmysql%E6%9C%8D%E5%8A%A1/</guid><description># dock 文件夹为根文件夹
# 其下包涵 mysql 和 next 文件夹, 及 docker-compose.yml 和 .env 文件 # dock/.env
###########################################################
###################### General Setup ######################
###########################################################
### Paths #################################################
# Choose storage path on your machine. For all storage systems
DATA_PATH_HOST=~/.dock/data
### Drivers ################################################
# All volumes driver
VOLUMES_DRIVER=local
# All Networks driver
NETWORKS_DRIVER=bridge
### Docker compose files ##################################
# Select which docker-compose files to include. If using docker-sync append `:docker-compose.sync.yml` at the end
COMPOSE_FILE=docker-compose.</description></item><item><title>dockerfile中CMD和RUN的区别</title><link>https://zhujianghan.github.io/zjh-blog/posts/backend/dockerfile%E4%B8%ADcmd%E5%92%8Crun%E7%9A%84%E5%8C%BA%E5%88%AB/</link><pubDate>Tue, 07 Jan 2025 13:46:00 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/backend/dockerfile%E4%B8%ADcmd%E5%92%8Crun%E7%9A%84%E5%8C%BA%E5%88%AB/</guid><description>背景: 在使用 docker-compose 构建镜像时, 对 nextjs service 执行 RUN npm install 报错, 找不到 package.json 文件 原因: volume 中共享的文件夹, 是在容器启动时才开始共享, 在构建时没有共享, 导致 RUN 找不到 package.json, 而 CMD 才是容器运行时执行的命令
在 Dockerfile 中，CMD 和 RUN 是两个不同的指令，它们用于不同的目的和阶段： RUN - 用途：RUN 指令用于在构建 Docker 镜像时执行命令。
- 执行阶段：它在 Docker 镜像的构建过程中运行，生成一个新的镜像层。
- 结果：RUN 命令的结果被永久保存在镜像中，成为镜像的一部分。每次执行 RUN 时，都会创建一个新的镜像层。
- 常见用途：
- 安装软件包和依赖项。
- 下载和解压文件。
- 编译源代码。
- 创建目录和文件。
- 配置环境和系统设置。
CMD - 用途：CMD 指令用于指定容器启动时要执行的命令。
- 执行阶段：它在容器启动时运行，而不是在镜像构建时。
- 结果：CMD 命令的结果不会保存在镜像中，因为它是容器运行时的指令。
- 常见用途：
- 运行应用的主进程。
- 执行容器的默认命令。
- 可以被 docker run 命令中的命令覆盖。
配置示例 # .</description></item><item><title>Docker Build Development Environment of Tarojs</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/docker-build-development-environment-of-tarojs/</link><pubDate>Fri, 28 Oct 2022 14:43:36 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/docker-build-development-environment-of-tarojs/</guid><description>// 目录结构 |-- project folder | |-- xxx | |-- yyy | |-- zzz | |-- ... | |-- docker-files | | Dockerfile | | docker-compose.yml // Dockerfile # syntax=docker/dockerfile:1 FROM node:16-alpine RUN \ npm config set registry http://registry.npmmirror.com \ &amp;amp;&amp;amp; npm install -g @tarojs/cli RUN mkdir -p /var/www WORKDIR /var/www // docker-compose.yml version: &amp;#39;3.7&amp;#39; networks: frontend: driver: bridge services: ### Taro ############################################## taro: container_name: taro restart: always build: context: .</description></item><item><title>laradock-数据库连接</title><link>https://zhujianghan.github.io/zjh-blog/posts/backend/laradock-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/</link><pubDate>Fri, 02 Aug 2019 10:20:49 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/backend/laradock-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/</guid><description> adminer 容器 up 后, 在 127.0.0.1:8080 使用 [ &amp;lsquo;服务器&amp;rsquo; =&amp;gt; &amp;lsquo;mysql&amp;rsquo; ], root + root 默认账户可以登录; 在 navicat 中, 则使用 127.0.0.1 + root + root 即可登录 新的 mysql 数据库可以新建一个测试用户
CREATE USER &amp;#39;test&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;test&amp;#39;; GRANT ALL ON *.* TO &amp;#39;test&amp;#39;@&amp;#39;%&amp;#39;</description></item></channel></rss>