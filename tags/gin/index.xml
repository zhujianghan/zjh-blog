<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gin on My New Hugo Site</title><link>http://localhost:1313/tags/gin/</link><description>Recent content in gin on My New Hugo Site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 07 Jun 2022 14:49:09 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/gin/index.xml" rel="self" type="application/rss+xml"/><item><title>gin-middleware-注意事项</title><link>http://localhost:1313/posts/backend/gin-middleware-%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link><pubDate>Tue, 07 Jun 2022 14:49:09 +0800</pubDate><guid>http://localhost:1313/posts/backend/gin-middleware-%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid><description>1. gin middleware 如果要中止后面中间件及所有程序的执行, 需要使用 c.Abort() + return 其中 Abort 会中止其后的中间件及页面处理程序, 而不会中止当前中间件函数内的余下程序, 使用 return 来中止当前中间件内后部的程序 func RejectMethodsExceptGet() gin.HandlerFunc { rejectMethods := map[string]struct{}{ &amp;#34;POST&amp;#34;: {}, &amp;#34;DELETE&amp;#34;: {}, &amp;#34;PUT&amp;#34;: {}, &amp;#34;PATCH&amp;#34;: {}, } return func(c *gin.Context) { if _, exist := rejectMethods[c.Request.Method]; exist { c.AbortWithStatusJSON(403, gin.H{ &amp;#34;err_msg&amp;#34;: &amp;#34;invalid method&amp;#34;, }) return } c.Next() } } 2. 中间件 Use 需要写在路由注册之前, 否则将不对之前注册的路由起作用 r := gin.New() r.Use(RejectMethodsExceptGet()) r.GET(&amp;#34;/test&amp;#34;, func(c *gin.Context) { example := c.MustGet(&amp;#34;example&amp;#34;).(string) // it would print: &amp;#34;12345&amp;#34; log.</description></item></channel></rss>