<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nginx on Fourleaf Blog</title><link>https://zhujianghan.github.io/zjh-blog/tags/nginx/</link><description>Recent content in nginx on Fourleaf Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 20 Dec 2024 10:47:00 +0800</lastBuildDate><atom:link href="https://zhujianghan.github.io/zjh-blog/tags/nginx/index.xml" rel="self" type="application/rss+xml"/><item><title>goaccess export nginx access log to report</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/goaccess-export-nginx-access-log-to-report/</link><pubDate>Fri, 20 Dec 2024 10:47:00 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/goaccess-export-nginx-access-log-to-report/</guid><description>使用 goaccess 将 nginx access.log 生成可视化 report.html goaccess github地址
nginx access.log 过滤 # 过滤不统计的日志(如图片、js、css、恶意访问的 login、404 等) cat access.log | grep -vE &amp;#39;(\.css|\.js|\.jpg|\.png|\.gif|\.ico|\.jfif|\.woff|\.woff2|\.eot|\.ttf|\.svg|\.map|bot|Bot|favicon|404|curl|Java|scaninfo|phpMyAdmin|\.env|admin|login|python|http\-client|wp\-|post|POST|\.php|api|ajax|ads\.txt|humans\.txt|well\-known|security\.txt|CONNECT|Head)&amp;#39; &amp;gt; new.log # 只统计 GET 请求 cat new.log | grep &amp;#39;GET&amp;#39; &amp;gt; new2.log # 只统计 GET 首页的请求 cat new2.log | grep &amp;#39;GET /&amp;#39; &amp;gt; new3.log goaccess 操作步骤 linux 环境(编译/包管理器)安装 goaccess, 编译安装注意要 --enable-utf8 --enable-geoip=mmdb /etc/goaccess/goaccess.conf 配置 ## 2.1 打开 nginx time-format, date-format, log-format # Apache/NGINX&amp;#39;s log formats below. time-format %H:%M:%S # Apache/NGINX&amp;#39;s log formats below.</description></item><item><title>Nginx__config Proxy_pass</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/nginx_config-proxy_pass/</link><pubDate>Fri, 10 Feb 2023 15:06:45 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/nginx_config-proxy_pass/</guid><description>参考简书: nginx 之 proxy_pass 详解
nginx conf 之 proxy_pass 使用背景 vue3 项目调用后台接口时, 不希望将后端接口地址(host地址) 暴露给普通用户, 并且直接解决浏览器跨域问题, 会使用 nginx 对接口地址作代码, 表面上访问前端 vue 项目的接口地址, 实际上会通过代码转发到真正的后端服务地址
vue3+vite 开发环境在 vite.config.js 配置代理 // vite.config.js export defaut defineConfig({ ... server: { proxy: { &amp;#39;/api&amp;#39;: { target: &amp;#39;http://backend.test/api&amp;#39;, changeOrigin: true, rewrite: (path) =&amp;gt; path.replace(/^\/api/, &amp;#39;&amp;#39;) } } } ... }) nginx conf 生产环境 按要代理的地址最后是否带 &amp;lsquo;/&amp;rsquo;,及是否有 子目录分为 2 种情况, 每种情况按是否有子目录又可再细分为 2 种情况
有 &amp;lsquo;/&amp;rsquo; 表示绝对路径, 不带 location;
没有表示相对路径, 要带上 location 后的路径</description></item><item><title>nginx-autoindex-off</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/nginx-autoindex-off/</link><pubDate>Thu, 07 Nov 2019 12:52:31 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/nginx-autoindex-off/</guid><description>nginx autoindex off 禁止目录访问</description></item></channel></rss>