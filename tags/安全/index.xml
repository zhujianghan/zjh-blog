<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>安全 on My New Hugo Site</title><link>https://zhujianghan.github.io/zjh-blog/tags/%E5%AE%89%E5%85%A8/</link><description>Recent content in 安全 on My New Hugo Site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 20 Nov 2020 16:01:43 +0800</lastBuildDate><atom:link href="https://zhujianghan.github.io/zjh-blog/tags/%E5%AE%89%E5%85%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>csrf-跨站请求伪造</title><link>https://zhujianghan.github.io/zjh-blog/posts/backend/csrf-%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0/</link><pubDate>Fri, 20 Nov 2020 16:01:43 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/backend/csrf-%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0/</guid><description>CSRF（Cross-site request forgery）跨站请求伪造, 定义: 攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。 利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的。 一个典型的CSRF攻击有着如下的流程:
受害者登录a.com，并保留了登录凭证（Cookie）。 攻击者引诱受害者访问了b.com。 b.com 向 a.com 发送了一个请求：a.com/act=xx。浏览器会默认携带a.com的Cookie。 a.com接收到请求后，对请求进行验证，并确认是受害者的凭证，误以为是受害者自己发送的请求。 a.com以受害者的名义执行了act=xx。 攻击完成，攻击者在受害者不知情的情况下，冒充受害者，让a.com执行了自己定义的操作。 前后端分离时, 不使用 cookie, 则不会有 csrf 危险</description></item><item><title>apache-Multiviews-漏洞</title><link>https://zhujianghan.github.io/zjh-blog/posts/server/apache--multiviews--%E6%BC%8F%E6%B4%9E/</link><pubDate>Fri, 11 Oct 2019 17:08:18 +0800</pubDate><guid>https://zhujianghan.github.io/zjh-blog/posts/server/apache--multiviews--%E6%BC%8F%E6%B4%9E/</guid><description>腾讯云安全检测提示 xxx.com/icons/index 及 xxx.com/icons/small/index 存在安全漏洞
打开发现是一串 icons 图片, 而在项目文件里并没有这些文件 见: http://www.apache.org/icons/small/
以下引用自: http://www.511yj.com/apache-colose-icons.html
我们如果使用了apache服务器，当我访问http://xxx.xxx.xxx/icons/时会自动显示这个目录下的所以文件列表，这行造成网站目录信息的泄露对我们的网站安全造成威胁，在 关闭apache自动目录列表功能的三种方法 这篇文章中的三种方法都不能禁止自动目录列表，你如果使用网站安全监测，会提醒你发现目录启用了自动目录列表功能，所以我们必须禁止它，经过测试，按如下步骤可以禁止：
打开目录apache/conf/extra/下的文件httpd-autoindex.conf 找到
Alias /icons/ &amp;#34;/xampp/apache/icons/&amp;#34; &amp;lt;Directory &amp;#34;/xampp/apache/icons&amp;#34;&amp;gt; Options Indexes MultiViews AllowOverride None Require all granted &amp;lt;/Directory&amp;gt; &amp;lt;Directory &amp;#34;/xampp/apache/icons&amp;#34;&amp;gt; Options MultiViews AllowOverride None Require all granted &amp;lt;/Directory&amp;gt; 我实际上是注释掉了这些配置, 因为用不到这些 icons, 直接达到目的</description></item></channel></rss>